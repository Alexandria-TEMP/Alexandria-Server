image: golang:1.22.2

.go-cache:
    variables:
      GOPATH: $CI_PROJECT_DIR/.go
    before_script:
      - mkdir -p .go
    cache:
      paths:
        - .go/pkg/mod/

variables:
  OUTPUT_NAME: __bin__/$CI_PROJECT_NAME

stages:
  - lint
  - test
  - build

lint:
    image: golangci/golangci-lint:v1.57.2
    stage: lint
    extends: .go-cache
    allow_failure: false
    script:
      - golangci-lint run -vc .golangci.yml

test:
  stage: test
  script:
    # TODO alexandria-backend [nothing else]
    - pkgs=$(go list ./... | grep -v docs | grep -v interfaces | grep -v forms | grep -v mocks | grep -v server | grep -v vfs)
    - go test $pkgs -short -coverprofile=coverage.out -covermode count
    
    - go get github.com/boumenot/gocover-cobertura
    - go run github.com/boumenot/gocover-cobertura < coverage.out > coverage.xml 
    
    - go install gotest.tools/gotestsum@v1.12.0
    - gotestsum --junitfile junit.xml --format testname
    
  #coverage: '/coverage: \d+.\d+% of statements/'

  artifacts:
    name: "$CI_JOB_NAME"
    when: always
    paths:
      - coverage.xml
      - junit.xml
    reports:
      junit: junit.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

build:
  stage: build
  script:
    - mkdir -p $OUTPUT_NAME
    - go build -o $OUTPUT_NAME ./...
  artifacts:
    paths:
      - $OUTPUT_NAME

