image: golang:1.22.2

.go-cache:
    variables:
      GOPATH: $CI_PROJECT_DIR/.go
    before_script:
      - mkdir -p .go
    cache:
      paths:
        - .go/pkg/mod/

variables:
  OUTPUT_NAME: __bin__/$CI_PROJECT_NAME

stages:
  - lint
  - test
  - build

# lint:
#     image: golangci/golangci-lint:v1.57.2
#     stage: lint
#     extends: .go-cache
#     allow_failure: false
#     script:
#       - golangci-lint run -vc .golangci.yml

# build:
#   stage: build
#   script:
#     - mkdir -p $OUTPUT_NAME
#     - go build -o $OUTPUT_NAME ./...
#   artifacts:
#     paths:
#       - $OUTPUT_NAME

# test_reports:
#   stage: test
#   script:
#     - go test ./... -short -coverprofile=coverage.out -covermode count
#     - go get github.com/boumenot/gocover-cobertura
#     - go run github.com/boumenot/gocover-cobertura < coverage.out > coverage.xml 
    
#     - go install gotest.tools/gotestsum@v1.12.0
#     - gotestsum --junitfile junit.xml --format testname
    
#   artifacts:
#     name: "$CI_JOB_NAME"
#     when: always
#     paths:
#       - coverage.xml
#       - junit.xml
#     reports:
#       junit: junit.xml
#       coverage_report:
#         coverage_format: cobertura
#         path: coverage.xml

.package_tests:
  stage: test
  coverage: '/coverage: \d+.\d+% of statements/'
  script: go test $(go list ./... | grep $PKG) -cover

test_pkg_controllers:
  extends: .package_tests
  variables:
    PKG: controllers

test_pkg_filesystem:
  extends: .package_tests
  variables:
    PKG: filesystem



