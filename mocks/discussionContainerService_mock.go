// Code generated by MockGen. DO NOT EDIT.
// Source: ./discussionContainerService_interface.go
//
// Generated by this command:
//
//	mockgen -package=mocks -source=./discussionContainerService_interface.go -destination=../../mocks/discussionContainerService_mock.go
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "gitlab.ewi.tudelft.nl/cse2000-software-project/2023-2024/cluster-v/17b/alexandria-backend/models"
	gomock "go.uber.org/mock/gomock"
)

// MockDiscussionContainerService is a mock of DiscussionContainerService interface.
type MockDiscussionContainerService struct {
	ctrl     *gomock.Controller
	recorder *MockDiscussionContainerServiceMockRecorder
}

// MockDiscussionContainerServiceMockRecorder is the mock recorder for MockDiscussionContainerService.
type MockDiscussionContainerServiceMockRecorder struct {
	mock *MockDiscussionContainerService
}

// NewMockDiscussionContainerService creates a new mock instance.
func NewMockDiscussionContainerService(ctrl *gomock.Controller) *MockDiscussionContainerService {
	mock := &MockDiscussionContainerService{ctrl: ctrl}
	mock.recorder = &MockDiscussionContainerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDiscussionContainerService) EXPECT() *MockDiscussionContainerServiceMockRecorder {
	return m.recorder
}

// GetDiscussionContainer mocks base method.
func (m *MockDiscussionContainerService) GetDiscussionContainer(id uint) (*models.DiscussionContainer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDiscussionContainer", id)
	ret0, _ := ret[0].(*models.DiscussionContainer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDiscussionContainer indicates an expected call of GetDiscussionContainer.
func (mr *MockDiscussionContainerServiceMockRecorder) GetDiscussionContainer(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDiscussionContainer", reflect.TypeOf((*MockDiscussionContainerService)(nil).GetDiscussionContainer), id)
}
