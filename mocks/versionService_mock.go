// Code generated by MockGen. DO NOT EDIT.
// Source: ./versionService_interface.go
//
// Generated by this command:
//
//	mockgen -package=mocks -source=./versionService_interface.go -destination=../../mocks/versionService_mock.go
//

// Package mocks is a generated GoMock package.
package mocks

import (
	multipart "mime/multipart"
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	filesystem "gitlab.ewi.tudelft.nl/cse2000-software-project/2023-2024/cluster-v/17b/alexandria-backend/filesystem"
	models "gitlab.ewi.tudelft.nl/cse2000-software-project/2023-2024/cluster-v/17b/alexandria-backend/models"
	gomock "go.uber.org/mock/gomock"
)

// MockVersionService is a mock of VersionService interface.
type MockVersionService struct {
	ctrl     *gomock.Controller
	recorder *MockVersionServiceMockRecorder
}

// MockVersionServiceMockRecorder is the mock recorder for MockVersionService.
type MockVersionServiceMockRecorder struct {
	mock *MockVersionService
}

// NewMockVersionService creates a new mock instance.
func NewMockVersionService(ctrl *gomock.Controller) *MockVersionService {
	mock := &MockVersionService{ctrl: ctrl}
	mock.recorder = &MockVersionServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVersionService) EXPECT() *MockVersionServiceMockRecorder {
	return m.recorder
}

// CreateVersion mocks base method.
func (m *MockVersionService) CreateVersion(c *gin.Context, file *multipart.FileHeader, postID uint) (*models.Version, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateVersion", c, file, postID)
	ret0, _ := ret[0].(*models.Version)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateVersion indicates an expected call of CreateVersion.
func (mr *MockVersionServiceMockRecorder) CreateVersion(c, file, postID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateVersion", reflect.TypeOf((*MockVersionService)(nil).CreateVersion), c, file, postID)
}

// GetFilesystem mocks base method.
func (m *MockVersionService) GetFilesystem() *filesystem.Filesystem {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFilesystem")
	ret0, _ := ret[0].(*filesystem.Filesystem)
	return ret0
}

// GetFilesystem indicates an expected call of GetFilesystem.
func (mr *MockVersionServiceMockRecorder) GetFilesystem() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFilesystem", reflect.TypeOf((*MockVersionService)(nil).GetFilesystem))
}

// RenderProject mocks base method.
func (m *MockVersionService) RenderProject() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RenderProject")
	ret0, _ := ret[0].(error)
	return ret0
}

// RenderProject indicates an expected call of RenderProject.
func (mr *MockVersionServiceMockRecorder) RenderProject() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RenderProject", reflect.TypeOf((*MockVersionService)(nil).RenderProject))
}
