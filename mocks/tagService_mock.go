// Code generated by MockGen. DO NOT EDIT.
// Source: ./tagService_interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	tags "gitlab.ewi.tudelft.nl/cse2000-software-project/2023-2024/cluster-v/17b/alexandria-backend/models/tags"
)

// MockTagService is a mock of TagService interface.
type MockTagService struct {
	ctrl     *gomock.Controller
	recorder *MockTagServiceMockRecorder
}

// MockTagServiceMockRecorder is the mock recorder for MockTagService.
type MockTagServiceMockRecorder struct {
	mock *MockTagService
}

// NewMockTagService creates a new mock instance.
func NewMockTagService(ctrl *gomock.Controller) *MockTagService {
	mock := &MockTagService{ctrl: ctrl}
	mock.recorder = &MockTagServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTagService) EXPECT() *MockTagServiceMockRecorder {
	return m.recorder
}

// GetTagsFromStringIDs mocks base method.
func (m *MockTagService) GetTagsFromStringIDs(arg0 []string) ([]*tags.ScientificFieldTag, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTagsFromStringIDs", arg0)
	ret0, _ := ret[0].([]*tags.ScientificFieldTag)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTagsFromStringIDs indicates an expected call of GetTagsFromStringIDs.
func (mr *MockTagServiceMockRecorder) GetTagsFromStringIDs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTagsFromStringIDs", reflect.TypeOf((*MockTagService)(nil).GetTagsFromStringIDs), arg0)
}

// GetTagsFromUintIDs mocks base method.
func (m *MockTagService) GetTagsFromUintIDs(arg0 []uint) ([]*tags.ScientificFieldTag, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTagsFromUintIDs", arg0)
	ret0, _ := ret[0].([]*tags.ScientificFieldTag)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTagsFromUintIDs indicates an expected call of GetTagsFromUintIDs.
func (mr *MockTagServiceMockRecorder) GetTagsFromUintIDs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTagsFromUintIDs", reflect.TypeOf((*MockTagService)(nil).GetTagsFromUintIDs), arg0)
}
