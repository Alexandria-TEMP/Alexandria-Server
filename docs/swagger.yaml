definitions:
  forms.PostCreationForm:
    properties:
      collaborators:
        items:
          type: integer
        type: array
    type: object
  forms.ProjectPostCreationForm:
    properties:
      postCreationForm:
        allOf:
        - $ref: '#/definitions/forms.PostCreationForm'
        description: TODO add fields
    type: object
  models.PostDTO:
    properties:
      collaboratorIDs:
        items:
          type: integer
        type: array
      id:
        type: integer
      postType:
        $ref: '#/definitions/tags.PostType'
      scientificFieldTags:
        items:
          $ref: '#/definitions/tags.ScientificField'
        type: array
      versionID:
        type: integer
    type: object
  models.ProjectPostDTO:
    properties:
      closedMergeRequestIDs:
        items:
          type: integer
        type: array
      completionStatus:
        $ref: '#/definitions/tags.CompletionStatus'
      feedbackPreference:
        $ref: '#/definitions/tags.FeedbackPreference'
      id:
        type: integer
      openMergeRequestIDs:
        items:
          type: integer
        type: array
      postID:
        type: integer
      postReviewStatusTag:
        $ref: '#/definitions/tags.PostReviewStatus'
    type: object
  tags.CompletionStatus:
    enum:
    - idea
    - ongoing
    - completed
    type: string
    x-enum-varnames:
    - Idea
    - Ongoing
    - Completed
  tags.FeedbackPreference:
    enum:
    - discussion
    - formal feedback
    type: string
    x-enum-varnames:
    - Discussion
    - FormalFeedback
  tags.PostReviewStatus:
    enum:
    - open
    - revision needed
    - reviewed
    type: string
    x-enum-varnames:
    - Open
    - RevisionNeeded
    - Reviewed
  tags.PostType:
    enum:
    - project
    - question
    - reflection
    type: string
    x-enum-varnames:
    - Project
    - Question
    - Reflection
  tags.ScientificField:
    enum:
    - mathematics
    type: string
    x-enum-varnames:
    - Mathematics
  utils.HTTPError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /:
    put:
      consumes:
      - application/json
      description: Update any number of the aspects of project post
      parameters:
      - description: Updated Project Post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.ProjectPostDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Update project post
  /post:
    post:
      consumes:
      - application/json
      description: Create a new question or discussion post
      parameters:
      - description: Post Creation Form
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/forms.PostCreationForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PostDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Create new post
  /post/{postID}:
    get:
      consumes:
      - application/json
      description: Get a post by post ID
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PostDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Get post
  /projectPost:
    post:
      consumes:
      - application/json
      description: Create a new project post
      parameters:
      - description: Project Post Creation Form
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/forms.ProjectPostCreationForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProjectPostDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Create new project post
  /projectPost/{postID}:
    get:
      consumes:
      - application/json
      description: Get a project post by post ID
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProjectPostDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Get project post
swagger: "2.0"
