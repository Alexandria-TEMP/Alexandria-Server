definitions:
  forms.PostCreationForm:
    properties:
      collaborators:
        items:
          $ref: '#/definitions/models.Collaborator'
        type: array
      createdAt:
        type: string
      currentVersion:
        $ref: '#/definitions/models.Version'
      postType:
        $ref: '#/definitions/tags.PostTypeTag'
      scientificFieldTags:
        items:
          $ref: '#/definitions/tags.ScientificFieldTag'
        type: array
      updatedAt:
        type: string
    type: object
  forms.ProjectPostCreationForm:
    properties:
      closedMergeRequests:
        items:
          $ref: '#/definitions/models.ClosedMergeRequest'
        type: array
      collaborators:
        items:
          $ref: '#/definitions/models.Collaborator'
        type: array
      completionStatus:
        $ref: '#/definitions/tags.CompletionStatusTag'
      createdAt:
        type: string
      currentVersion:
        $ref: '#/definitions/models.Version'
      feedbackPreference:
        $ref: '#/definitions/tags.FeedbackPreferenceTag'
      forkedFrom:
        $ref: '#/definitions/models.ClosedMergeRequest'
      id:
        description: place holder until we make standardzied uuid system
        type: integer
      openMergeRequests:
        items:
          $ref: '#/definitions/models.MergeRequest'
        type: array
      postReviewStatusTag:
        $ref: '#/definitions/tags.PostReviewStatusTag'
      postType:
        $ref: '#/definitions/tags.PostTypeTag'
      scientificFieldTags:
        items:
          $ref: '#/definitions/tags.ScientificFieldTag'
        type: array
      updatedAt:
        type: string
    type: object
  models.ClosedMergeRequest:
    properties:
      MergeRequestDecision:
        enum:
        - 0
        - 1
        type: integer
        x-enum-varnames:
        - Rejected
        - Approved
      anonymous:
        type: boolean
      collaborators:
        items:
          $ref: '#/definitions/models.Collaborator'
        type: array
      createdAt:
        type: string
      mainVersionWhenClosed:
        $ref: '#/definitions/models.Version'
      newVersion:
        $ref: '#/definitions/models.Version'
      reviews:
        items:
          $ref: '#/definitions/models.MergeRequestReview'
        type: array
      updatedCompletionStatus:
        $ref: '#/definitions/tags.CompletionStatusTag'
      updatedScientificFields:
        $ref: '#/definitions/tags.ScientificFieldTag'
    type: object
  models.Collaborator:
    properties:
      CollaborationType:
        enum:
        - 0
        - 1
        - 2
        type: integer
        x-enum-varnames:
        - Author
        - Contributor
        - Reviewer
      discussions:
        items:
          $ref: '#/definitions/models.Discussion'
        type: array
      email:
        type: string
      firstName:
        type: string
      institution:
        type: string
      lastName:
        type: string
      password:
        type: string
      posts:
        items:
          $ref: '#/definitions/models.Post'
        type: array
      reviews:
        items:
          $ref: '#/definitions/models.MergeRequestReview'
        type: array
    type: object
  models.Discussion:
    properties:
      anonymous:
        type: boolean
      author:
        $ref: '#/definitions/models.Member'
      createdAt:
        type: string
      deleted:
        type: boolean
      deletedAt:
        type: string
      replies:
        items:
          $ref: '#/definitions/models.Discussion'
        type: array
      text:
        type: string
      updatedAt:
        type: string
    type: object
  models.Member:
    properties:
      discussions:
        items:
          $ref: '#/definitions/models.Discussion'
        type: array
      email:
        type: string
      firstName:
        type: string
      institution:
        type: string
      lastName:
        type: string
      password:
        type: string
      posts:
        items:
          $ref: '#/definitions/models.Post'
        type: array
      reviews:
        items:
          $ref: '#/definitions/models.MergeRequestReview'
        type: array
    type: object
  models.MergeRequest:
    properties:
      anonymous:
        type: boolean
      collaborators:
        items:
          $ref: '#/definitions/models.Collaborator'
        type: array
      createdAt:
        type: string
      newVersion:
        $ref: '#/definitions/models.Version'
      reviews:
        items:
          $ref: '#/definitions/models.MergeRequestReview'
        type: array
      updatedCompletionStatus:
        $ref: '#/definitions/tags.CompletionStatusTag'
      updatedScientificFields:
        $ref: '#/definitions/tags.ScientificFieldTag'
    type: object
  models.MergeRequestReview:
    properties:
      MergeRequestDecision:
        enum:
        - 0
        - 1
        type: integer
        x-enum-varnames:
        - Rejected
        - Approved
      feedback:
        type: string
    type: object
  models.Post:
    properties:
      collaborators:
        items:
          $ref: '#/definitions/models.Collaborator'
        type: array
      createdAt:
        type: string
      currentVersion:
        $ref: '#/definitions/models.Version'
      id:
        description: place holder until we make standardzied uuid system
        type: integer
      postType:
        $ref: '#/definitions/tags.PostTypeTag'
      scientificFieldTags:
        items:
          $ref: '#/definitions/tags.ScientificFieldTag'
        type: array
      updatedAt:
        type: string
    type: object
  models.ProjectPost:
    properties:
      closedMergeRequests:
        items:
          $ref: '#/definitions/models.ClosedMergeRequest'
        type: array
      collaborators:
        items:
          $ref: '#/definitions/models.Collaborator'
        type: array
      completionStatus:
        $ref: '#/definitions/tags.CompletionStatusTag'
      createdAt:
        type: string
      currentVersion:
        $ref: '#/definitions/models.Version'
      feedbackPreference:
        $ref: '#/definitions/tags.FeedbackPreferenceTag'
      forkedFrom:
        $ref: '#/definitions/models.ClosedMergeRequest'
      id:
        description: place holder until we make standardzied uuid system
        type: integer
      openMergeRequests:
        items:
          $ref: '#/definitions/models.MergeRequest'
        type: array
      postReviewStatusTag:
        $ref: '#/definitions/tags.PostReviewStatusTag'
      postType:
        $ref: '#/definitions/tags.PostTypeTag'
      scientificFieldTags:
        items:
          $ref: '#/definitions/tags.ScientificFieldTag'
        type: array
      updatedAt:
        type: string
    type: object
  models.Version:
    properties:
      discussions:
        items:
          $ref: '#/definitions/models.Discussion'
        type: array
    type: object
  tags.CompletionStatusTag:
    type: object
  tags.FeedbackPreferenceTag:
    type: object
  tags.PostReviewStatusTag:
    type: object
  tags.PostTypeTag:
    type: object
  tags.ScientificFieldTag:
    type: object
  utils.HTTPError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /:
    put:
      consumes:
      - application/json
      description: Update any number of the aspects of project post
      parameters:
      - description: Updated Project Post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.ProjectPost'
      produces:
      - application/json
      responses:
        "200":
          description: Success
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Update project post
  /post:
    post:
      consumes:
      - application/json
      description: Create a new question or discussion post
      parameters:
      - description: Post Creation Form
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/forms.PostCreationForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Create new post
  /post/{postID}:
    get:
      consumes:
      - application/json
      description: Get a post by post ID
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Get post
  /projectPost:
    post:
      consumes:
      - application/json
      description: Create a new project post
      parameters:
      - description: Project Post Creation Form
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/forms.ProjectPostCreationForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProjectPost'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Create new project post
  /projectPost/{postID}:
    get:
      consumes:
      - application/json
      description: Get a project post by post ID
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProjectPost'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Get project post
swagger: "2.0"
