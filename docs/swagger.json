{
    "swagger": "2.0",
    "info": {
        "description": "This is the API of Alexandria.",
        "title": "Alexandria API",
        "contact": {},
        "version": "2.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v2",
    "paths": {
        "/discussions": {
            "post": {
<<<<<<< HEAD
                "description": "Create a new discussion\nEither parent ID or version ID must be specified. This determines whether it's a reply or not, respectively.",
=======
                "description": "Create a new discussion\nIf parent ID field is used, the discussion will be a reply",
>>>>>>> main
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "discussions"
                ],
=======
>>>>>>> main
                "summary": "Create new discussion",
                "parameters": [
                    {
                        "description": "Discussion Creation Form",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.DiscussionCreationForm"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Parent ID",
                        "name": "parentID",
                        "in": "query"
<<<<<<< HEAD
                    },
                    {
                        "type": "string",
                        "description": "Version ID",
                        "name": "versionID",
                        "in": "query"
=======
>>>>>>> main
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DiscussionDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
<<<<<<< HEAD
        "/discussions/reports/{reportID}": {
            "get": {
                "description": "Gets a discussion report by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "discussions"
                ],
                "summary": "Gets a discussion report by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Report ID",
                        "name": "reportID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/reports.DiscussionReportDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
=======
>>>>>>> main
        "/discussions/{discussionID}": {
            "get": {
                "description": "Get a discussion by discussion ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "discussions"
                ],
=======
>>>>>>> main
                "summary": "Get discussion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discussion ID",
                        "name": "discussionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DiscussionDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a discussion with given ID from database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "discussions"
                ],
=======
>>>>>>> main
                "summary": "Delete a discussion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "discussion ID",
                        "name": "discussionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
<<<<<<< HEAD
        "/discussions/{discussionID}/reports": {
            "get": {
                "description": "Get all reports that have been added to this discussion",
=======
        "/discussions/{discussionID}/replies": {
            "get": {
                "description": "Gets an array of all the first-level replies of a discussion\nEndpoint is offset-paginated",
>>>>>>> main
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "discussions"
=======
                "summary": "Get all the replies of a discussion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "discussion ID",
                        "name": "discussionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page query",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DiscussionDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/discussions/{discussionID}/reports": {
            "get": {
                "description": "Get all reports that have been added to this discussion\nEndpoint is offset-paginated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
>>>>>>> main
                ],
                "summary": "Get all reports of this discussion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discussion ID",
                        "name": "discussionID",
                        "in": "path",
                        "required": true
<<<<<<< HEAD
=======
                    },
                    {
                        "type": "integer",
                        "description": "page query",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "pageSize",
                        "in": "query"
>>>>>>> main
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
<<<<<<< HEAD
                                "type": "integer"
=======
                                "$ref": "#/definitions/models.ReportDTO"
>>>>>>> main
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new report for a discussion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "discussions"
                ],
=======
>>>>>>> main
                "summary": "Add a new report to a discussion",
                "parameters": [
                    {
                        "description": "Report Creation Form",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.ReportCreationForm"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Discussion ID",
                        "name": "discussionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ReportDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/filter/posts": {
            "get": {
<<<<<<< HEAD
                "description": "Returns all post IDs that meet the requirements in the form\nEndpoint is offset-paginated",
=======
                "description": "Returns all posts that meet the requirements in the form\nEndpoint is offset-paginated",
>>>>>>> main
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "filtering"
                ],
=======
>>>>>>> main
                "summary": "Filters all posts",
                "parameters": [
                    {
                        "description": "Filter form",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.FilterForm"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "page query",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
<<<<<<< HEAD
                                "type": "integer"
=======
                                "$ref": "#/definitions/models.PostDTO"
>>>>>>> main
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/filter/project-posts": {
            "get": {
<<<<<<< HEAD
                "description": "Returns all project post IDs that meet the requirements in the form\nEndpoint is offset-paginated",
=======
                "description": "Returns all project posts that meet the requirements in the form\nEndpoint is offset-paginated",
>>>>>>> main
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "filtering"
                ],
=======
>>>>>>> main
                "summary": "Filters all project posts",
                "parameters": [
                    {
                        "description": "Filter form",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.FilterForm"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "page query",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
<<<<<<< HEAD
                                "type": "integer"
=======
                                "$ref": "#/definitions/models.ProjectPostDTO"
>>>>>>> main
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/members": {
<<<<<<< HEAD
            "get": {
                "description": "Get the ID of every member in the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "members"
                ],
                "summary": "Get IDs of all members",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
=======
>>>>>>> main
            "put": {
                "description": "Update the fields of a member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "members"
                ],
=======
>>>>>>> main
                "summary": "Update a member",
                "parameters": [
                    {
                        "description": "Updated member",
                        "name": "member",
                        "in": "body",
                        "required": true,
                        "schema": {
<<<<<<< HEAD
                            "$ref": "#/definitions/models.MemberDTO"
=======
                            "$ref": "#/definitions/models.Member"
>>>>>>> main
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new member from the given fields",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "members"
                ],
=======
>>>>>>> main
                "summary": "Create a new member",
                "parameters": [
                    {
                        "description": "Member Creation Form",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.MemberCreationForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MemberDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/members/{userID}": {
            "get": {
                "description": "Get a member by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "members"
                ],
=======
>>>>>>> main
                "summary": "Get member from database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MemberDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a member with given ID from database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "members"
                ],
=======
>>>>>>> main
                "summary": "Delete a member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/members/{userID}/discussions": {
            "get": {
<<<<<<< HEAD
                "description": "Get all discussions that this member has participated in",
=======
                "description": "Get all merge requests that this member is a collaborator of\nEndpoint is offset-paginated",
>>>>>>> main
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "members"
                ],
                "summary": "Get all discussions",
=======
                "summary": "Get all merge requests of this member",
>>>>>>> main
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
<<<<<<< HEAD
=======
                    },
                    {
                        "type": "integer",
                        "description": "page query",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "pageSize",
                        "in": "query"
>>>>>>> main
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
<<<<<<< HEAD
                                "type": "integer"
=======
                                "$ref": "#/definitions/models.DiscussionDTO"
>>>>>>> main
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/members/{userID}/merge-requests": {
            "get": {
<<<<<<< HEAD
                "description": "Get all merge requests that this member is a collaborator of",
=======
                "description": "Get all merge requests that this member is a collaborator of\nEndpoint is offset-paginated",
>>>>>>> main
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "members"
                ],
=======
>>>>>>> main
                "summary": "Get all merge requests of this member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
<<<<<<< HEAD
=======
                    },
                    {
                        "type": "integer",
                        "description": "page query",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "pageSize",
                        "in": "query"
>>>>>>> main
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
<<<<<<< HEAD
                                "type": "integer"
=======
                                "$ref": "#/definitions/models.MergeRequestDTO"
>>>>>>> main
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/members/{userID}/posts": {
            "get": {
<<<<<<< HEAD
                "description": "Get all posts that this member is a collaborator of",
=======
                "description": "Get all posts that this member is a collaborator of\nEndpoint is offset-paginated",
>>>>>>> main
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "members"
                ],
=======
>>>>>>> main
                "summary": "Get all posts of this member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
<<<<<<< HEAD
=======
                    },
                    {
                        "type": "integer",
                        "description": "page query",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "pageSize",
                        "in": "query"
>>>>>>> main
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
<<<<<<< HEAD
                                "type": "integer"
=======
                                "$ref": "#/definitions/models.PostDTO"
>>>>>>> main
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/members/{userID}/project-posts": {
            "get": {
<<<<<<< HEAD
                "description": "Get all project posts that this member is a collaborator of",
=======
                "description": "Get all project posts that this member is a collaborator of\nEndpoint is offset-paginated",
>>>>>>> main
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "members"
                ],
=======
>>>>>>> main
                "summary": "Get all project posts of this member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
<<<<<<< HEAD
=======
                    },
                    {
                        "type": "integer",
                        "description": "page query",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "pageSize",
                        "in": "query"
>>>>>>> main
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
<<<<<<< HEAD
                                "type": "integer"
=======
                                "$ref": "#/definitions/models.ProjectPostDTO"
>>>>>>> main
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/members/{userID}/saved-posts": {
            "get": {
<<<<<<< HEAD
                "description": "Get all posts that this member has saved",
=======
                "description": "Get all posts that this member has saved\nEndpoint is offset-paginated",
>>>>>>> main
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "members"
                ],
=======
>>>>>>> main
                "summary": "Get all saved posts of this member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
<<<<<<< HEAD
=======
                    },
                    {
                        "type": "integer",
                        "description": "page query",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "pageSize",
                        "in": "query"
>>>>>>> main
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
<<<<<<< HEAD
                                "type": "integer"
=======
                                "$ref": "#/definitions/models.PostDTO"
>>>>>>> main
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/members/{userID}/saved-posts/{postID}": {
            "post": {
                "description": "Adds a post to the saved posts of a member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "members"
                ],
=======
>>>>>>> main
                "summary": "Adds new saved post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "post ID",
                        "name": "postID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/members/{userID}/saved-project-posts": {
            "get": {
<<<<<<< HEAD
                "description": "Get all project posts that this member has saved",
=======
                "description": "Get all project posts that this member has saved\nEndpoint is offset-paginated",
>>>>>>> main
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "members"
                ],
=======
>>>>>>> main
                "summary": "Get all saved project posts of this member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
<<<<<<< HEAD
=======
                    },
                    {
                        "type": "integer",
                        "description": "page query",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "pageSize",
                        "in": "query"
>>>>>>> main
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
<<<<<<< HEAD
                                "type": "integer"
=======
                                "$ref": "#/definitions/models.ProjectPostDTO"
>>>>>>> main
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/members/{userID}/saved-project-posts/{postID}": {
            "post": {
                "description": "Adds a project post to the saved project posts of a member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "members"
                ],
=======
>>>>>>> main
                "summary": "Adds new saved project post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "post ID",
                        "name": "postID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/merge-requests": {
            "put": {
                "description": "Update any number of the aspects of a merge request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "merge-requests"
                ],
=======
>>>>>>> main
                "summary": "Update merge request",
                "parameters": [
                    {
                        "description": "Updated MergeRequest",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MergeRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
<<<<<<< HEAD
                "description": "Create a new merge request linked to a project post.\nNote that Member IDs passed here, get converted to Collaborator IDs.",
=======
                "description": "Create a new question or discussion merge request",
>>>>>>> main
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "merge-requests"
                ],
=======
>>>>>>> main
                "summary": "Create new merge request",
                "parameters": [
                    {
                        "description": "MergeRequest Creation Form",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.MergeRequestCreationForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MergeRequestDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
<<<<<<< HEAD
        "/merge-requests/collaborators/{collaboratorID}": {
            "get": {
                "description": "Get a merge request collaborator by ID, a member who has collaborated on a merge request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "merge-requests"
                ],
                "summary": "Get a merge request collaborator by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collaborator ID",
                        "name": "collaboratorID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MergeRequestCollaboratorDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/merge-requests/reviews/{reviewID}": {
            "get": {
                "description": "Returns a review of a merge request with the given ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "merge-requests"
                ],
                "summary": "Returns a merge request review by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "review ID",
                        "name": "reviewID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MergeRequestReviewDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
=======
>>>>>>> main
        "/merge-requests/{mergeRequestID}": {
            "get": {
                "description": "Get a merge request by merge request ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "merge-requests"
                ],
=======
>>>>>>> main
                "summary": "Get merge request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MergeRequest ID",
                        "name": "mergeRequestID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MergeRequestDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a merge request with given ID from database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "merge-requests"
                ],
=======
>>>>>>> main
                "summary": "Delete a merge request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "merge request ID",
                        "name": "mergeRequestID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/merge-requests/{mergeRequestID}/can-review/{userID}": {
            "get": {
                "description": "Returns true if the user fulfills the requirements to review the merge request\nReturns false if user is unauthorized to review the merge request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "merge-requests"
                ],
=======
>>>>>>> main
                "summary": "Returns whether the user is allowed to review this merge request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "merge request ID",
                        "name": "mergeRequestID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
<<<<<<< HEAD
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/merge-requests/{mergeRequestID}/review-statuses": {
            "get": {
                "description": "Returns an array of the statuses of all the reviews of this merge request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "merge-requests"
                ],
                "summary": "Returns status of all merge request reviews",
                "parameters": [
                    {
                        "type": "string",
                        "description": "merge request ID",
                        "name": "mergeRequestID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MergeRequestReviewStatus"
=======
                            "type": "array",
                            "items": {
                                "type": "boolean"
>>>>>>> main
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/merge-requests/{mergeRequestID}/reviews": {
<<<<<<< HEAD
=======
            "get": {
                "description": "Returns an array of the statuses of all the reviews of this merge request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Returns status of all merge request reviews",
                "parameters": [
                    {
                        "type": "string",
                        "description": "merge request ID",
                        "name": "mergeRequestID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
>>>>>>> main
            "post": {
                "description": "Adds a review to a merge request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "merge-requests"
                ],
=======
>>>>>>> main
                "summary": "Adds a review to a merge request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "merge request ID",
                        "name": "mergeRequestID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "review creation form",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.ReviewCreationForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
<<<<<<< HEAD
=======
        "/merge-requests/{mergeRequestID}/reviews/{reviewID}": {
            "get": {
                "description": "Returns a review with the given ID of the merge request with the given ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Returns a review of a merge request",
                "parameters": [
                    {
                        "type": "string",
                        "description": "merge request ID",
                        "name": "mergeRequestID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "review ID",
                        "name": "reviewID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ReviewDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
>>>>>>> main
        "/posts": {
            "put": {
                "description": "Update any number of the aspects of a question or discussion post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "posts"
                ],
=======
>>>>>>> main
                "summary": "Update post",
                "parameters": [
                    {
                        "description": "Updated Post",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PostDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new question or discussion post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "posts"
                ],
=======
>>>>>>> main
                "summary": "Create new post",
                "parameters": [
                    {
                        "description": "Post Creation Form",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.PostCreationForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PostDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
<<<<<<< HEAD
        "/posts/collaborators/{collaboratorID}": {
            "get": {
                "description": "Get a post collaborator by ID, a member who has collaborated on a post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Get a post collaborator by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collaborator ID",
                        "name": "collaboratorID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PostCollaboratorDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
=======
>>>>>>> main
        "/posts/from-github": {
            "post": {
                "description": "Create a new question or discussion post\nCreates a post in the same way as CreatePost\nHowever, the post files are imported from the given Github repository",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "posts"
                ],
=======
>>>>>>> main
                "summary": "Create new post with the version imported from github",
                "parameters": [
                    {
                        "description": "Post Creation Form",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.PostCreationForm"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Github repository url",
                        "name": "url",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PostDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
<<<<<<< HEAD
        "/posts/reports/{reportID}": {
            "get": {
                "description": "Gets a post report by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Gets a post report by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Report ID",
                        "name": "reportID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/reports.PostReportDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
=======
>>>>>>> main
        "/posts/{postID}": {
            "get": {
                "description": "Get a post by post ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "posts"
                ],
=======
>>>>>>> main
                "summary": "Get post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID",
                        "name": "postID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PostDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a post with given ID from database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "posts"
                ],
=======
>>>>>>> main
                "summary": "Delete a post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post ID",
                        "name": "postID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/posts/{postID}/reports": {
            "get": {
<<<<<<< HEAD
                "description": "Get all reports that have been added to this post",
=======
                "description": "Get all reports that have been added to this post\nEndpoint is offset-paginated",
>>>>>>> main
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "posts"
                ],
=======
>>>>>>> main
                "summary": "Get all reports of this post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID",
                        "name": "postID",
                        "in": "path",
                        "required": true
<<<<<<< HEAD
=======
                    },
                    {
                        "type": "integer",
                        "description": "page query",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "pageSize",
                        "in": "query"
>>>>>>> main
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
<<<<<<< HEAD
                                "type": "integer"
=======
                                "$ref": "#/definitions/models.ReportDTO"
>>>>>>> main
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new report for a post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "posts"
                ],
=======
>>>>>>> main
                "summary": "Add a new report to a post",
                "parameters": [
                    {
                        "description": "Report Creation Form",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.ReportCreationForm"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Post ID",
                        "name": "postID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ReportDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/project-posts": {
            "put": {
                "description": "Update any number of the aspects of a project post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "project-posts"
                ],
=======
>>>>>>> main
                "summary": "Update project post",
                "parameters": [
                    {
                        "description": "Updated Project Post",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProjectPostDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new project post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "project-posts"
                ],
=======
>>>>>>> main
                "summary": "Create new project post",
                "parameters": [
                    {
                        "description": "Project Post Creation Form",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.ProjectPostCreationForm"
                        }
<<<<<<< HEAD
=======
                    },
                    {
                        "type": "string",
                        "description": "Parent post ID",
                        "name": "parentPostID",
                        "in": "query"
>>>>>>> main
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ProjectPostDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/project-posts/from-github": {
            "post": {
                "description": "Create a new project post\nCreates a project post in the same way as CreateProjectPost\nHowever, the post files are imported from the given Github repository",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "project-posts"
                ],
=======
>>>>>>> main
                "summary": "Create new project post with the version imported from github",
                "parameters": [
                    {
                        "description": "Post Creation Form",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.ProjectPostCreationForm"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Github repository url",
                        "name": "url",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ProjectPostDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/project-posts/{postID}": {
            "get": {
                "description": "Get a project post by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "project-posts"
                ],
=======
>>>>>>> main
                "summary": "Get project post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID",
                        "name": "postID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ProjectPostDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a project post with given ID from database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "project-posts"
                ],
=======
>>>>>>> main
                "summary": "Delete a project post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post ID",
                        "name": "postID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/project-posts/{postID}/all-discussions": {
            "get": {
<<<<<<< HEAD
                "description": "Returns all discussion IDs on this project post over all its previous versions, instead of only the current version",
=======
                "description": "Returns all discussions on this project post and all of it's merge requests\nEndpoint is offset-paginated",
>>>>>>> main
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "project-posts"
                ],
                "summary": "Returns all discussion IDs associated with the project post",
=======
                "summary": "Returns all discussions associated with the project post",
>>>>>>> main
                "parameters": [
                    {
                        "type": "string",
                        "description": "post ID",
                        "name": "postID",
                        "in": "path",
                        "required": true
<<<<<<< HEAD
=======
                    },
                    {
                        "type": "integer",
                        "description": "page query",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "pageSize",
                        "in": "query"
>>>>>>> main
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
<<<<<<< HEAD
                                "type": "integer"
=======
                                "$ref": "#/definitions/models.DiscussionDTO"
>>>>>>> main
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
<<<<<<< HEAD
        "/project-posts/{postID}/merge-requests-by-status": {
            "get": {
                "description": "Returns all MR IDs of this project post, grouped by each MR's review status",
=======
        "/project-posts/{postID}/closed-merge-requests": {
            "get": {
                "description": "Get all closed merge requests associated with the given project post\nEndpoint is offset-paginated",
>>>>>>> main
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "project-posts"
                ],
                "summary": "Returns MR IDs grouped by each MR status",
=======
                "summary": "Get all closed merge requests of a project post",
>>>>>>> main
                "parameters": [
                    {
                        "type": "string",
                        "description": "post ID",
                        "name": "postID",
                        "in": "path",
                        "required": true
<<<<<<< HEAD
=======
                    },
                    {
                        "type": "integer",
                        "description": "page query",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "pageSize",
                        "in": "query"
>>>>>>> main
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
<<<<<<< HEAD
                            "$ref": "#/definitions/forms.GroupedMergeRequestForm"
=======
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MergeRequestDTO"
                            }
>>>>>>> main
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
<<<<<<< HEAD
        "/tags/completion-status": {
            "get": {
                "description": "Returns every possible completion status that a Post can have",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Returns all completion statuses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/tags.CompletionStatus"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/tags/feedback-preference": {
            "get": {
                "description": "Returns every possible feedback preference that a Project Post can have",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Returns all feedbback preferences",
=======
        "/project-posts/{postID}/open-merge-requests": {
            "get": {
                "description": "Get all open merge requests associated with the given project post\nEndpoint is offset-paginated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get all open merge requests of a project post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "post ID",
                        "name": "postID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page query",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
>>>>>>> main
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
<<<<<<< HEAD
                                "$ref": "#/definitions/tags.FeedbackPreference"
=======
                                "$ref": "#/definitions/models.MergeRequestDTO"
>>>>>>> main
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
<<<<<<< HEAD
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/tags/post-type": {
            "get": {
                "description": "Returns every possible post type that a Post can have",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Returns all post types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/tags.PostType"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
=======
                    "404": {
                        "description": "Not Found",
>>>>>>> main
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/tags/scientific": {
            "get": {
<<<<<<< HEAD
                "description": "Returns all scientific tags (an array of strings) in the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
=======
                "description": "Returns all scientific tags in the database",
                "produces": [
                    "application/json"
                ],
>>>>>>> main
                "summary": "Returns all scientific tags",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/tags.ScientificFieldTag"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
<<<<<<< HEAD
=======
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
>>>>>>> main
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
<<<<<<< HEAD
        "/versions/{postID}": {
            "post": {
                "description": "Create a new version with discussions and repository",
=======
        "/versions": {
            "post": {
                "description": "Create a new version with discussions and repository from zipped file in body",
>>>>>>> main
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
<<<<<<< HEAD
                "tags": [
                    "versions"
                ],
                "summary": "Create new version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Parent Post ID",
                        "name": "postID",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Repository to create",
                        "name": "repository",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.IncomingFileForm"
                        }
=======
                "summary": "Create new version",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Repository to create",
                        "name": "repository",
                        "in": "formData",
                        "required": true
>>>>>>> main
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.VersionDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/versions/{versionID}": {
            "get": {
                "description": "Get a version by version ID",
<<<<<<< HEAD
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "versions"
                ],
=======
                "produces": [
                    "application/json"
                ],
>>>>>>> main
                "summary": "Get version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Version ID",
                        "name": "versionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.VersionDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
<<<<<<< HEAD
=======
                    }
                }
            }
        },
        "/versions/{versionID}/discussions": {
            "get": {
                "description": "Returns all discussions on this version that are not a reply to another discussion\nEndpoint is offset-paginated",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns all level 1 discussions associated with the version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "version ID",
                        "name": "versionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page query",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DiscussionDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
>>>>>>> main
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
<<<<<<< HEAD
        "/versions/{versionID}/file": {
            "get": {
                "description": "Get the contents of a single file from a repository of a version",
                "tags": [
                    "versions"
=======
        "/versions/{versionID}/file/{filepath}": {
            "get": {
                "description": "Get the contents of a single file from a repository of a version",
                "produces": [
                    "application/octet-stream"
>>>>>>> main
                ],
                "summary": "Get a file from a repository",
                "parameters": [
                    {
                        "type": "string",
<<<<<<< HEAD
                        "description": "version ID",
=======
                        "description": "Version ID",
>>>>>>> main
                        "name": "versionID",
                        "in": "path",
                        "required": true
                    },
                    {
<<<<<<< HEAD
                        "description": "file path",
                        "name": "filePath",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
=======
                        "type": "string",
                        "description": "Filepath",
                        "name": "filepath",
                        "in": "path",
                        "required": true
>>>>>>> main
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
<<<<<<< HEAD
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
=======
>>>>>>> main
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/versions/{versionID}/render": {
            "get": {
<<<<<<< HEAD
                "description": "Get the render of the repository underlying a version",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "versions"
                ],
=======
                "description": "Get the render of the repository underlying a version if it exists and has been rendered successfully",
                "produces": [
                    "text/html"
                ],
>>>>>>> main
                "summary": "Get the render of a version",
                "parameters": [
                    {
                        "type": "string",
<<<<<<< HEAD
                        "description": "version ID",
=======
                        "description": "Version ID",
>>>>>>> main
                        "name": "versionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
<<<<<<< HEAD
=======
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
>>>>>>> main
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
<<<<<<< HEAD
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
=======
>>>>>>> main
                    }
                }
            }
        },
        "/versions/{versionID}/repository": {
            "get": {
                "description": "Get the entire zipped repository of a version",
                "produces": [
                    "application/zip"
                ],
<<<<<<< HEAD
                "tags": [
                    "versions"
                ],
=======
>>>>>>> main
                "summary": "Get the repository of a version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Version ID",
                        "name": "versionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
<<<<<<< HEAD
=======
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
>>>>>>> main
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/versions/{versionID}/tree": {
            "get": {
                "description": "Get the file tree of a repository of a version",
<<<<<<< HEAD
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "versions"
                ],
=======
                "produces": [
                    "application/json"
                ],
>>>>>>> main
                "summary": "Get the file tree of a repository",
                "parameters": [
                    {
                        "type": "string",
<<<<<<< HEAD
                        "description": "version ID",
=======
                        "description": "Version ID",
>>>>>>> main
                        "name": "versionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "forms.DiscussionCreationForm": {
<<<<<<< HEAD
            "type": "object",
            "properties": {
                "anonymous": {
                    "description": "If anonymous, the discussion will ignore member ID",
                    "type": "boolean"
                },
                "memberID": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "forms.FilterForm": {
            "type": "object"
        },
        "forms.GroupedMergeRequestForm": {
            "type": "object",
            "properties": {
                "openForReviewIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "peerReviewedIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "rejectedIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "forms.IncomingFileForm": {
=======
            "type": "object"
        },
        "forms.FilterForm": {
>>>>>>> main
            "type": "object"
        },
        "forms.MemberCreationForm": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
<<<<<<< HEAD
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tags.ScientificFieldTag"
                    }
                },
=======
>>>>>>> main
                "firstName": {
                    "type": "string"
                },
                "institution": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "description": "making the password just a string for now\nTODO: some hashing or semblance of security",
                    "type": "string"
                }
            }
        },
        "forms.MergeRequestCreationForm": {
<<<<<<< HEAD
            "type": "object",
            "properties": {
                "anonymous": {
                    "type": "boolean"
                },
                "collaboratingMemberIDs": {
                    "description": "The MR's metadata",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "mergeRequestTitle": {
                    "type": "string"
                },
                "projectPostID": {
                    "type": "integer"
                },
                "updatedCompletionStatus": {
                    "$ref": "#/definitions/tags.CompletionStatus"
                },
                "updatedFeedbackPreferences": {
                    "$ref": "#/definitions/tags.FeedbackPreference"
                },
                "updatedPostTitle": {
                    "description": "Changes made by the MR",
                    "type": "string"
                },
                "updatedScientificFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tags.ScientificField"
                    }
                }
            }
=======
            "type": "object"
>>>>>>> main
        },
        "forms.PostCreationForm": {
            "type": "object",
            "properties": {
<<<<<<< HEAD
                "anonymous": {
                    "type": "boolean"
                },
                "authorMemberIDs": {
                    "description": "Members that are authors of the post",
=======
                "collaborators": {
>>>>>>> main
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
<<<<<<< HEAD
                },
                "postType": {
                    "$ref": "#/definitions/tags.PostType"
                },
                "scientificFieldTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tags.ScientificField"
                    }
                },
                "title": {
                    "type": "string"
=======
>>>>>>> main
                }
            }
        },
        "forms.ProjectPostCreationForm": {
            "type": "object",
            "properties": {
<<<<<<< HEAD
                "completionStatus": {
                    "$ref": "#/definitions/tags.CompletionStatus"
                },
                "feedbackPreference": {
                    "$ref": "#/definitions/tags.FeedbackPreference"
                },
                "postCreationForm": {
                    "$ref": "#/definitions/forms.PostCreationForm"
=======
                "postCreationForm": {
                    "description": "TODO add fields",
                    "allOf": [
                        {
                            "$ref": "#/definitions/forms.PostCreationForm"
                        }
                    ]
>>>>>>> main
                }
            }
        },
        "forms.ReportCreationForm": {
            "type": "object"
        },
        "forms.ReviewCreationForm": {
<<<<<<< HEAD
            "type": "object",
            "properties": {
                "feedback": {
                    "type": "string"
                },
                "mergeRequestDecision": {
                    "$ref": "#/definitions/models.MergeRequestReviewDecision"
                },
                "reviewingMemberID": {
                    "type": "integer"
                }
            }
        },
        "models.CollaborationType": {
            "type": "string",
            "enum": [
                "author",
                "contributor",
                "reviewer"
            ],
            "x-enum-varnames": [
                "Author",
                "Contributor",
                "Reviewer"
            ]
=======
            "type": "object"
>>>>>>> main
        },
        "models.DiscussionDTO": {
            "type": "object",
            "properties": {
                "anonymous": {
                    "type": "boolean"
                },
                "deleted": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "memberID": {
                    "type": "integer"
                },
                "replyIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "text": {
                    "type": "string"
                },
                "versionID": {
                    "type": "integer"
                }
            }
        },
<<<<<<< HEAD
=======
        "models.Member": {
            "type": "object"
        },
>>>>>>> main
        "models.MemberDTO": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "institution": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "scientificFieldTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tags.ScientificField"
                    }
                }
            }
        },
<<<<<<< HEAD
        "models.MergeRequestCollaboratorDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "memberID": {
                    "type": "integer"
                },
                "mergeRequestID": {
                    "type": "integer"
                }
            }
        },
=======
>>>>>>> main
        "models.MergeRequestDTO": {
            "type": "object",
            "properties": {
                "anonymous": {
                    "type": "boolean"
                },
                "collaboratorIDs": {
                    "description": "MR metadata",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
<<<<<<< HEAD
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mergeRequestDecision": {
                    "$ref": "#/definitions/models.MergeRequestReviewStatus"
                },
=======
                "id": {
                    "type": "integer"
                },
>>>>>>> main
                "mergeRequestTitle": {
                    "type": "string"
                },
                "newPostTitle": {
                    "type": "string"
                },
                "newVersionID": {
                    "description": "MR's proposed changes",
                    "type": "integer"
                },
                "previousVersionID": {
                    "type": "integer"
                },
                "projectPostID": {
                    "type": "integer"
                },
                "reviewIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
<<<<<<< HEAD
                "updatedAt": {
                    "type": "string"
                },
=======
>>>>>>> main
                "updatedCompletionStatus": {
                    "$ref": "#/definitions/tags.CompletionStatus"
                },
                "updatedScientificFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tags.ScientificField"
                    }
                }
            }
        },
<<<<<<< HEAD
        "models.MergeRequestReviewDTO": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "feedback": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "memberID": {
                    "type": "integer"
                },
                "mergeRequestDecision": {
                    "$ref": "#/definitions/models.MergeRequestReviewDecision"
                },
                "mergeRequestID": {
                    "type": "integer"
                }
            }
        },
        "models.MergeRequestReviewDecision": {
            "type": "string",
            "enum": [
                "rejected",
                "approved"
            ],
            "x-enum-varnames": [
                "ReviewRejected",
                "ReviewApproved"
            ]
        },
        "models.MergeRequestReviewStatus": {
            "type": "string",
            "enum": [
                "open for review",
                "peer reviewed",
                "rejected"
            ],
            "x-enum-varnames": [
                "MergeRequestOpenForReview",
                "MergeRequestPeerReviewed",
                "MergeRequestRejected"
            ]
        },
        "models.PostCollaboratorDTO": {
            "type": "object",
            "properties": {
                "collaborationType": {
                    "$ref": "#/definitions/models.CollaborationType"
                },
                "id": {
                    "type": "integer"
                },
                "memberID": {
                    "type": "integer"
                },
                "postID": {
                    "type": "integer"
                }
            }
        },
        "models.PostDTO": {
            "type": "object",
            "properties": {
                "anonymous": {
                    "type": "boolean"
                },
=======
        "models.PostDTO": {
            "type": "object",
            "properties": {
>>>>>>> main
                "collaboratorIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "postType": {
                    "$ref": "#/definitions/tags.PostType"
                },
                "scientificFieldTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tags.ScientificField"
                    }
                },
                "title": {
                    "type": "string"
                },
                "versionID": {
                    "type": "integer"
                }
            }
        },
        "models.ProjectPostDTO": {
            "type": "object",
            "properties": {
                "closedMergeRequestIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "completionStatus": {
                    "$ref": "#/definitions/tags.CompletionStatus"
                },
                "feedbackPreference": {
                    "$ref": "#/definitions/tags.FeedbackPreference"
                },
                "id": {
                    "type": "integer"
                },
                "openMergeRequestIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "postDTO": {
                    "$ref": "#/definitions/models.PostDTO"
                },
                "postReviewStatusTag": {
                    "$ref": "#/definitions/tags.PostReviewStatus"
                }
            }
        },
        "models.RenderStatus": {
            "type": "string",
            "enum": [
                "success",
                "pending",
                "failure"
            ],
            "x-enum-varnames": [
<<<<<<< HEAD
                "RenderSuccess",
                "RenderPending",
                "RenderFailure"
=======
                "Success",
                "Pending",
                "Failure"
>>>>>>> main
            ]
        },
        "models.ReportDTO": {
            "type": "object"
        },
<<<<<<< HEAD
=======
        "models.ReviewDTO": {
            "type": "object"
        },
>>>>>>> main
        "models.VersionDTO": {
            "type": "object",
            "properties": {
                "discussionIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "renderStatus": {
                    "$ref": "#/definitions/models.RenderStatus"
                }
            }
        },
<<<<<<< HEAD
        "reports.DiscussionReportDTO": {
            "type": "object",
            "properties": {
                "discussionID": {
                    "type": "integer"
                }
            }
        },
        "reports.PostReportDTO": {
            "type": "object",
            "properties": {
                "postID": {
                    "type": "integer"
                }
            }
        },
=======
>>>>>>> main
        "tags.CompletionStatus": {
            "type": "string",
            "enum": [
                "idea",
                "ongoing",
                "completed"
            ],
            "x-enum-varnames": [
                "Idea",
                "Ongoing",
                "Completed"
            ]
        },
        "tags.FeedbackPreference": {
            "type": "string",
            "enum": [
                "discussion",
                "formal feedback"
            ],
            "x-enum-varnames": [
                "Discussion",
                "FormalFeedback"
            ]
        },
        "tags.PostReviewStatus": {
            "type": "string",
            "enum": [
                "open",
                "revision needed",
                "reviewed"
            ],
            "x-enum-varnames": [
                "Open",
                "RevisionNeeded",
                "Reviewed"
            ]
        },
        "tags.PostType": {
            "type": "string",
            "enum": [
                "project",
                "question",
                "reflection"
            ],
            "x-enum-varnames": [
                "Project",
                "Question",
                "Reflection"
            ]
        },
        "tags.ScientificField": {
            "type": "string",
            "enum": [
                "mathematics",
                "computer science"
            ],
            "x-enum-varnames": [
                "Mathematics",
                "ComputerScience"
            ]
        },
        "tags.ScientificFieldTag": {
            "type": "object"
        },
        "utils.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}