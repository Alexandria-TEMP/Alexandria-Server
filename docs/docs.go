// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/post/{postID}": {
            "get": {
                "description": "Get post by post ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "postID",
                        "name": "postID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Post"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Collaborator": {
            "type": "object",
            "properties": {
                "CollaborationType": {
                    "type": "integer",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "x-enum-varnames": [
                        "Author",
                        "Contributor",
                        "Reviewer"
                    ]
                },
                "discussions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Discussion"
                    }
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "institution": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Post"
                    }
                },
                "reviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MergeRequestReview"
                    }
                }
            }
        },
        "models.Discussion": {
            "type": "object",
            "properties": {
                "anonymous": {
                    "type": "boolean"
                },
                "author": {
                    "$ref": "#/definitions/models.Member"
                },
                "createdAt": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "deletedAt": {
                    "type": "string"
                },
                "replies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Discussion"
                    }
                },
                "text": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Member": {
            "type": "object",
            "properties": {
                "discussions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Discussion"
                    }
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "institution": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Post"
                    }
                },
                "reviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MergeRequestReview"
                    }
                }
            }
        },
        "models.MergeRequestReview": {
            "type": "object",
            "properties": {
                "MergeRequestDecision": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ],
                    "x-enum-varnames": [
                        "Rejected",
                        "Approved"
                    ]
                },
                "feedback": {
                    "type": "string"
                }
            }
        },
        "models.Post": {
            "type": "object",
            "properties": {
                "collaborators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Collaborator"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "currentVersion": {
                    "$ref": "#/definitions/models.Version"
                },
                "postType": {
                    "$ref": "#/definitions/tags.PostTypeTag"
                },
                "scientificFieldTags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tags.ScientificFieldTag"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Version": {
            "type": "object",
            "properties": {
                "discussions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Discussion"
                    }
                }
            }
        },
        "tags.PostTypeTag": {
            "type": "object"
        },
        "tags.ScientificFieldTag": {
            "type": "object"
        },
        "utils.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
